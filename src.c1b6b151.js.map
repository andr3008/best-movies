{"version":3,"sources":["fetchAPI.js","index.js"],"names":["BASE_URL","API_KEY","ApiService","constructor","searchQuery","page","fetchPopularMovies","url","fetch","then","response","json","results","fetchSearchMovies","fetchPopularMoviesPages","fetchSearchMoviesPages","fetchGenres","data","genres","insertGenresToMovieObj","fetchPopularArticles","genresList","map","movie","release_date","split","genre_ids","id","filter","el","flat","insertGenresToSearchObj","fetchSearchArticles","query","newQuery","pageNum","newPage","apiService"],"mappings":";;;AAGgC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHhC,MAAMA,EAAW,+BACXC,EAAU,mCAED,MAAMC,EACnBC,cACOC,KAAAA,YAAc,GACdC,KAAAA,KAAO,EAEdC,qBACQC,MAAAA,KAASP,2BAAkCC,yBAA+B,KAAKI,OAC9EG,OAAAA,MAAMD,GACVE,KAAKC,GAAYA,EAASC,QAC1BF,KAAK,EAAGG,QAAAA,KACAA,GAGbC,oBACQN,MAAAA,KAASP,0BAAiCC,yBAA+B,KAAKI,cAAc,KAAKD,cAChGI,OAAAA,MAAMD,GACVE,KAAKC,GAAYA,EAASC,QAC1BF,KAAK,EAAGG,QAAAA,KACAA,GAGbE,0BACQP,MAAAA,KAASP,2BAAkCC,yBAA+B,KAAKI,OAC9EG,OAAAA,MAAMD,GAAKE,KAAKC,GAAYA,EAASC,QAE9CI,yBACQR,MAAAA,KAASP,0BAAiCC,yBAA+B,KAAKI,cAAc,KAAKD,cAChGI,OAAAA,MAAMD,GAAKE,KAAKC,GAAYA,EAASC,QAE9CK,cAESR,OAAAA,SADQR,8BAAqCC,KAEjDQ,KAAKC,GAAYA,EAASC,QAC1BF,KAAKQ,GACGA,EAAKC,QAGlBC,yBACS,OAAA,KAAKC,uBAAuBX,KAAKQ,GAC/B,KAAKD,cAAcP,KAAKY,GACtBJ,EAAKK,IAAIC,IAAU,IACrBA,EACHC,aAAcD,EAAMC,aAAaC,MAAM,KAAK,GAC5CP,OAAQK,EAAMG,UAAUJ,IAAIK,GAAMN,EAAWO,OAAOC,GAAMA,EAAGF,KAAOA,IAAKG,YAKjFC,0BACS,OAAA,KAAKC,sBAAsBvB,KAAKQ,GAC9B,KAAKD,cAAcP,KAAKY,IAEtBJ,OAAAA,EAAKK,IAAIC,IAAU,IACrBA,EACHC,aAAcD,EAAMC,aAAeD,EAAMC,aAAaC,MAAM,KAAK,GAAK,MACtEP,OAAQK,EAAMG,UACVH,EAAMG,UAAUJ,IAAIK,GAAMN,EAAWO,OAAOC,GAAMA,EAAGF,KAAOA,IAAKG,OACjE,YAKRG,YACK,OAAA,KAAK7B,YAEV6B,UAAMC,GACH9B,KAAAA,YAAc8B,EAEjBC,cACK,OAAA,KAAK9B,KAEV8B,YAAQC,GACL/B,KAAAA,KAAO+B,GAxEgB,QAAA,QAAA;;ACDhC,aAFA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,eACA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,MAAMC,EAAa,IAAInC,EAAJ","file":"src.c1b6b151.js","sourceRoot":"../src","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9aaadf590dc90bb88adc9b4200a95438';\n\nexport default class ApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n  fetchPopularMovies() {\n    const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=${this.page}`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(({ results }) => {\n        return results;\n      });\n  }\n  fetchSearchMovies() {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${this.page}&query=${this.searchQuery}`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(({ results }) => {\n        return results;\n      });\n  }\n  fetchPopularMoviesPages() {\n    const url = `${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=${this.page}`;\n    return fetch(url).then(response => response.json());\n  }\n  fetchSearchMoviesPages() {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${this.page}&query=${this.searchQuery}`;\n    return fetch(url).then(response => response.json());\n  }\n  fetchGenres() {\n    const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        return data.genres;\n      });\n  }\n  insertGenresToMovieObj() {\n    return this.fetchPopularArticles().then(data => {\n      return this.fetchGenres().then(genresList => {\n        return data.map(movie => ({\n          ...movie,\n          release_date: movie.release_date.split('-')[0],\n          genres: movie.genre_ids.map(id => genresList.filter(el => el.id === id)).flat(),\n        }));\n      });\n    });\n  }\n  insertGenresToSearchObj() {\n    return this.fetchSearchArticles().then(data => {\n      return this.fetchGenres().then(genresList => {\n        let release_date;\n        return data.map(movie => ({\n          ...movie,\n          release_date: movie.release_date ? movie.release_date.split('-')[0] : 'n/a',\n          genres: movie.genre_ids\n            ? movie.genre_ids.map(id => genresList.filter(el => el.id === id)).flat()\n            : 'n/a',\n        }));\n      });\n    });\n  }\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n  get pageNum() {\n    return this.page;\n  }\n  set pageNum(newPage) {\n    this.page = newPage;\n  }\n}\n","import './sass/main.scss';\nimport ApiService from './fetchAPI';\nconst apiService = new ApiService();\n"]}